	
For the implementation of List class by fixed size array approach, please write codes for the three member functions: constructor, insert, and retrieve (marked red in the class declaration). 

The class List is defined as follows:

//The List preserves the order of the elements
public class List<T>{
      
       private final T[] items;
       private int size; // number of items in the list
       private static final int DEFAULT_CAPACITY=20;
      
       //Default constructor
       public List()  {
              //TO DO
       }
      
       // To check if the list is empty or not
       public boolean isEmpty() {
              return size<=0;
       }
      
       // To get the length of the list
       public int getLength() {
              return size;
       }
       //To insert the newItem into the list at position index
       //NOTE: 0<=index<=getlength()
       public boolean insert(int index, T newItem) {
              //TO DO
       }
      
       //To remove an item from the list at position index
       //NOTE: 0<=index<getlength()
       public boolean remove(int index) {
              //DONE
       }
      
       // To retrieve a list item by position index
       // If 0<=index<getLength() return the item, otherwise return null.
       public T retrieve(int index) {
             //TO DO
       }
      
      
      
}
Selected Answer:	
[None Given]
Correct Answer:	
Correct 
//Default constructor
       public List() {
              items = (T[]) new Object[DEFAULT_CAPACITY];
              size=0;
       }

       //To insert the newItem into the list at position index
       //NOTE: 0<=index<=getlength()
       public boolean insert(int index, T newItem) {
        //TO DO
              boolean flag=false;
              if(index>=0&&index<=size&&size<DEFAULT_CAPACITY)
              {
                     for (int i=size;i>index;i--)
                     {
                           items[i]=items[i-1];
                     }
                     items[index]=newItem;
                     size++;
                     flag=true;
              }
              return flag;
       }
             
       // To retrieve a list item by position index
       // If 0<=index<getLength() return the item, otherwise return null.
       public T retrieve(int index) {
              T buffer=null;
              if (index>=0 && index<getLength()) {
                     buffer=items[index];
              }
              return buffer;
       }
       //To remove an item from the list at position index
       //NOTE: 0<=index<getlength()
       public boolean remove(int index) {
 
              boolean flag=false;
              if(index>=0&&index<size)
              {
                     for (int i=index;i<size;i++)
                     {
                           items[i]=items[i+1];
                     }
                     items[size-1]=null;
                     size--;
                     flag=true;
              }
              return flag;
             
       }
